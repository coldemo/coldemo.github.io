{"version":3,"sources":["hooks/useApi.ts","gallery/util.ts","gallery/Gallery.tsx","components/GentleSpin.tsx","hooks/useFormBinding.ts","playground/babelMaster.ts","playground/styled.ts","playground/util.tsx","playground/Playground.tsx","hooks/useInterval.ts","hooks/useModel.ts","hooks/useTrigger.ts","AppRouter.tsx","serviceWorker.ts","index.tsx"],"names":["defaultParseData","response","data","useApi","method","urlPattern","parseData","useState","setResponse","loading","setLoading","error","setError","request","useCallback","a","patch","pathParams","Object","create","trueUrl","replace","$0","$1","Axios","url","getData","handleImageError","e","el","currentTarget","parent","parentNode","removeChild","Gallery","history","useHistory","resp","split","filter","Boolean","map","v","reqIndex","loadingIndex","getIndex","useEffect","className","spinning","gutter","xs","sm","id","key","hoverable","cover","alt","src","onError","onClick","metaKey","window","open","push","Meta","title","GentleSpin","props","_spinning","rest","_value","value","setValue","debouncedSetValue","useMemo","_","debounce","leading","trailing","useGentle","useFormBinding","_initial","_parseValue","defaultParseValue","r","target","initial","parseValue","controlled","onChange","worker","Worker","babelTransform","code","file","Promise","resolve","reject","onerror","console","Error","slice","onmessage","res","postMessage","MainRow","styled","Row","media","lessThan","MainCol","Col","MountNode","div","ErrorInfo","pre","displayError","err","mountNode","document","querySelector","ReactDOM","render","stack","loadJsForceUmd","name","deps","message","keys","k","JSON","stringify","join","appendJs","createElement","innerHTML","assetsNode","appendChild","wrapCode","trim","assign","useInterval","func","interval","setInterval","clearInterval","useModel","reducer","initialState","_actions","useReducer","state","dispatch","reduce","acc","action","type","moment","immer","axios","Antd","React","loadJs","Array","isArray","all","then","onload","loadCss","rel","href","appendCss","setRendering","noop","Playground","useParams","codeBinding","editor","respIndex","reqCode","errReqCode","respCode","loadingCode","preloading","defaults","s","preview","setPreview","compiling","setCompiling","rendering","previewLoading","doPreview","hasJsx","some","ext","endsWith","hasTs","options","_func","throttle","singleton","cancel","useTrigger","triggerPreview","Date","isGreaterThanMedium","useMedia","minWidth","handleSizingUpdate","event","Event","dispatchEvent","addEventListener","removeEventListener","style","flex","overflowX","onUpdate","border","maxWidth","width","minHeight","maxHeight","height","mode","theme","lineNumbers","onBeforeChange","AppRouter","path","exact","component","to","location","hostname","match","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iZA0BIA,EAAmB,SAACC,GACtB,OAAOA,EAAWA,EAASC,KAAO,MAGzBC,EAAS,SAClBC,EACAC,GAFkB,IAGlBC,EAHkB,uDAGqCN,EAHrC,kBAII,IAAD,EACSO,mBAAkC,MAD3C,mBAChBN,EADgB,KACNO,EADM,OAEOD,oBAAS,GAFhB,mBAEhBE,EAFgB,KAEPC,EAFO,OAGGH,mBAAS,MAHZ,mBAGhBI,EAHgB,KAGTC,EAHS,KAKjBC,EAAmBC,sBAAW,sBAChC,8CAAAC,EAAA,6DAAOC,EAAP,+BAAe,GACTC,EAAyBD,EAAMC,YAAcC,OAAOC,OAAO,MAE3DC,EAAUf,EAAWgB,QAAQ,2BAA2B,SAACC,EAAIC,GAC/D,MAAM,IAAN,OAAWN,EAAWM,OAJ1B,SAQIb,GAAW,GARf,SASyBc,IAAM,aACzBpB,SACAqB,IAAKL,GACFJ,IAZT,OASQf,EATR,OAcIO,EAAYP,GACZW,EAAS,MAfb,kDAiBIJ,EAAY,MACZI,EAAS,EAAD,IAlBZ,yBAoBIF,GAAW,GApBf,6EAuBA,CAACN,EAAQI,EAAaH,IAGpBqB,EAAUZ,uBAAY,WACxB,OAAOR,EAAUL,KAChB,CAACK,EAAWL,IAEf,MAAO,CAAEY,UAASF,QAAOV,WAAUyB,UAASjB,WAxC1B,IC9BTkB,G,OAAmB,SAC5BC,GAEA,IAAIC,EAAKD,EAAEE,cACPC,EAASF,EAAGG,WACZD,GAAQA,EAAOE,YAAYJ,K,kBCGtBK,EAAoB,WAC7B,IAAIC,EAAUC,cADqB,EAGmCjC,EAGpE,MAAO,kBAAkB,SAAAkC,GACzB,OAAKA,EACKA,EAAKnC,KAEZoC,MAAM,MACNC,OAAOC,SACPC,KAAI,SAAAC,GAAC,OAAIA,EAAErB,QAAQ,QAAS,OALb,MAJLsB,EAHoB,EAG7B9B,QAA4B+B,EAHC,EAGVnC,QAAgCoC,EAHtB,EAGanB,QAkBhD,OALAoB,qBAAU,WACRH,MAEC,IAGD,yBAAKI,UAAU,gBACb,kBAAC,IAAD,KACE,2CAEF,kBAAC,IAAD,CAAMC,SAAUJ,GACd,yBAAKG,UAAU,kBACb,kBAAC,IAAD,CACEE,OAAQ,CACN,CAAEC,GAAI,GAAIC,GAAI,IACd,CAAED,GAAI,GAAIC,GAAI,MAGfN,IAAWJ,KAAI,SAAAW,GACd,OACE,kBAAC,IAAD,CAAKC,IAAKD,EAAIF,GAAI,GAAIC,GAAI,IACxB,kBAAC,IAAD,CACEG,WAAS,EACTC,MACE,yBACEC,IAAI,GACJC,IAAG,eAAUL,EAAV,QACHM,QAAS/B,IAGbgC,QAAS,SAAA/B,GACHA,EAAEgC,QACJC,OAAOC,KAAP,wBAA6BV,IAE7BjB,EAAQ4B,KAAR,sBAA4BX,MAIhC,kBAAC,IAAKY,KAAN,CACEC,MAAOb,c,yICnClBc,EAAkC,SAAAC,GAAU,IACrCC,EAAuBD,EAAjCnB,SAAwBqB,EADsB,YACbF,EADa,cAGhDnB,EAxBqB,SAAAsB,GAAW,IAAD,EACX/D,mBAAS+D,GADE,mBAC9BC,EAD8B,KACvBC,EADuB,KAG/BC,EAAoBC,mBAAQ,WAC9B,OAAOC,IAAEC,SAASJ,EAAU,IAAM,CAChCK,SAAS,EACTC,UAAU,MAEX,IAUH,OARAhC,qBAAU,WACJwB,EACFE,EAASF,GAETG,EAAkBH,KAEnB,CAACA,EAAQG,IAELF,EAMQQ,CAAUX,GAEzB,OAAO,kBAAC,IAAD,eAAeC,EAAf,CAAqBrB,eC3BnBgC,EAAiB,SAAIC,EAAaC,GAC3C,IAAIC,EAAmCrE,uBAAY,SAAAc,GACjD,IAAIwD,EAAIxD,EAIR,OAHIA,GAAKA,EAAEyD,QAAU,UAAWzD,EAAEyD,SAChCD,EAAIxD,EAAEyD,OAAOd,OAERa,IACN,IAPwE,EAS/CV,mBAAQ,WAClC,MAAO,CAACO,EAAUC,GAAeC,KAChC,CAACF,EAAUC,EAAaC,IAXgD,mBAStEG,EATsE,KAS7DC,EAT6D,OAanDhF,mBAAY+E,GAbuC,mBAatEf,EAbsE,KAa/DC,EAb+D,KA4B3E,MAAO,CAAED,QAAOiB,WALC,CACfjB,QACAkB,SAViB3E,uBACjB,SAACc,GAAgB,IAAD,uBAATyC,EAAS,iCAATA,EAAS,kBACd,IAAIe,EAAIG,EAAU,WAAV,GAAW3D,GAAX,OAAiByC,IACzBG,EAASY,KAEX,CAACG,O,SC1BDG,EAAS,IAAIC,OAAO,qBAEbC,EAAc,uCAAG,WAC1BC,EACAC,GAF0B,SAAA/E,EAAA,+EAInB,IAAIgF,SAAQ,SAACC,EAASC,GAC3BP,EAAOQ,QAAU,SAAAtE,GACfuE,QAAQxF,MAAM,CAAC,iBAAkBiB,IACjCqE,EAAO,IAAIG,MAAJ,2BAA8BP,EAAKQ,MAAM,EAAG,SAGrDX,EAAOY,UAAY,SAAA1E,GACjB,IAAI2E,EAAM3E,EAAE1B,KACRqG,EAAI5F,MACNsF,EAAOM,EAAI5F,OAEXqF,EAAQO,EAAIrG,OAGhBwF,EAAOc,YAAY,CAAEX,OAAMC,aAlBH,2CAAH,wD,goBCYlB,IAAIW,EAAUC,YAAOC,IAAPD,CAAH,IAIdE,IAAMC,SAAS,SAAfD,CAJc,MASPE,EAAUJ,YAAOK,IAAPL,CAAH,KAIPM,EAAYN,IAAOO,IAAV,KAOTC,EAAYR,IAAOS,IAAV,KC7BTC,GAAe,SAACC,GACzB,IAAIC,EAAYC,SAASC,cAAc,cACvCC,IAASC,OAAO,kBAACR,EAAD,KAAYG,EAAIM,OAAoBL,IAG3CM,GAAc,uCAAG,yCAAA7G,EAAA,6DAC1BU,EAD0B,EAC1BA,IACAoG,EAF0B,EAE1BA,KAF0B,IAG1BC,YAH0B,MAGnB,GAHmB,EAStBjC,EAAO,GATe,kBAWHrE,IAAMC,GAXH,gBAWlBvB,EAXkB,EAWlBA,KACN2F,EAAO3F,EAZiB,wDAclB,IAAIkG,MAAJ,2BAA8B,KAAI2B,QAAlC,cAA+CtG,IAd7B,QAgB1BoE,EAAI,kGAII3E,OAAO8G,KAAKF,GACXrF,KAAI,SAAAwF,GAAC,0BAAiBC,KAAKC,UAAUF,GAAhC,oBAA8CH,EAAKG,OACxDG,KAAK,MANV,kFASIvC,EATJ,4BAUSqC,KAAKC,UAAUN,GAVxB,oCAaJQ,GAASxC,GA7BiB,0DAAH,sDAmEdwC,GAAW,SAACxC,GACrB,IAAIhE,EAAK0F,SAASe,cAAc,UAChCzG,EAAG0G,UAAY1C,EACfhC,OAAO2E,WAAWC,YAAY5G,IASrB6G,GAAW,SAAC7C,GACrB,MAAO,idAgBDA,EAhBC,imBAuCL8C,QC7FJzH,OAAO0H,OAAO/E,OAAQ,CACpBmB,iBACA6D,YClCuB,SAACC,EAAeC,GACvCjG,qBAAU,WACR,IAAIM,EAAK4F,aAAY,WACnBF,MACCC,GACH,OAAO,WACD3F,GAAI6F,cAAc7F,MAEvB,CAAC0F,EAAMC,KD2BVG,SE7BoB,SACpBC,EACAC,EACAC,GACI,IAAD,EACqBC,qBAA0BH,EAASC,GADxD,mBACEG,EADF,KACSC,EADT,KAkBH,MAAO,CAACD,EAfM7E,mBAAsB,WAClC,OAAOC,IAAE8E,OACPJ,GACA,SAACK,EAAKZ,EAAMb,GAMV,OALAyB,EAAIzB,GAAK,WACP,IAAIjH,EAAQ8H,EAAI,WAAJ,aACRa,EAAM,aAAKC,KAAM3B,GAAMjH,GAC3B,OAAOwI,EAASG,IAEXD,IAETxI,OAAOC,OAAO,SAEf,CAACkI,EAAUG,MFUdK,WACAnD,WACAoD,UACAnF,MACAoF,MAAOvI,IACPwI,OACAC,UACAxC,aACAL,gBACAQ,kBACAsC,ODRkB,SAATA,EAAUzI,GACnB,OAAI0I,MAAMC,QAAQ3I,GACTsE,QAAQsE,IAAI5I,EAAIgB,IAAIyH,IAASI,MAAK,eAEpC,IAAIvE,SAAQ,SAACC,EAASC,GAC3B,IAAIpE,EAAK0F,SAASe,cAAc,UAChCzG,EAAG4B,IAAMhC,EACTI,EAAG0I,OAAS,WACVvE,KAEFnE,EAAGqE,QAAU,SAAAtE,GACXqE,EAAO,IAAIG,MAAJ,2BAA8B3E,MAEvCoC,OAAO2E,WAAWC,YAAY5G,OCJhC2I,QDQmB,SAAVA,EAAW/I,GACpB,OAAI0I,MAAMC,QAAQ3I,GACTsE,QAAQsE,IAAI5I,EAAIgB,IAAI+H,IAAUF,MAAK,eAErC,IAAIvE,SAAQ,SAACC,EAASC,GAC3B,IAAIpE,EAAK0F,SAASe,cAAc,QAChCzG,EAAG4I,IAAM,aACT5I,EAAG6I,KAAOjJ,EACVI,EAAG0I,OAAS,WACVvE,KAEFnE,EAAGqE,QAAU,SAAAtE,GACXqE,EAAO,IAAIG,MAAJ,4BAA+B3E,MAExCoC,OAAO2E,WAAWC,YAAY5G,OCrBhCwG,YACAsC,UD8BqB,SAAC9E,GACtB,IAAIhE,EAAK0F,SAASe,cAAc,SAChCzG,EAAG0G,UAAY1C,EACfhC,OAAO2E,WAAWC,YAAY5G,IChC9B+I,aAAcjG,IAAEkG,OAKX,IAAIC,GAAuB,WAChC,IAAI3I,EAAUC,cACR0D,EAASiF,cAATjF,KAKFkF,EAAchG,EADA,IAC4B,SAACiG,EAAQ/K,EAAMqE,GAAf,OAAyBA,KAPjC,EAalCpE,EAAe,MAAO,kBAHfwC,EAV2B,EAUpC9B,QACUqK,EAX0B,EAWpCjL,SACS2C,EAZ2B,EAYpCnC,QAZoC,EAmBlCN,EAAe,MAAO,cAJfgL,EAf2B,EAepCtK,QACOuK,EAhB6B,EAgBpCzK,MACU0K,EAjB0B,EAiBpCpL,SACSqL,EAlB2B,EAkBpC7K,QAEE8K,EAAa3I,GAAgB0I,EAEjCxI,qBAAU,WACJgD,EACFqF,EAAQ,CAAElK,WAAY,CAAE6E,UAExBnD,MAGD,CAACmD,IAEJhD,qBAAU,WACR,GAAiB,MAAboI,EAAJ,CACA,IAMIM,EANMN,EAAUhL,KAEjBoC,MAAM,MACNG,KAAI,SAAAgJ,GAAC,OAAIA,EAAEpK,QAAQ,MAAO,IAAIsH,UAC9BpG,OAAOC,SACPC,KAAI,SAAAC,GAAC,OAAIA,EAAErB,QAAQ,QAAS,OACX,GAEpBc,EAAQ4B,KAAR,sBAA4B+B,GAAQ0F,OAEnC,CAAC1F,EAAMoF,IAEVpI,qBAAU,WACQ,MAAZuI,GACJL,EAAYxF,WAAWC,SAAS,KAAM,KAAM4F,EAASnL,QAEpD,CAACmL,IAEJvI,qBAAU,WAIJsI,GACFhE,GAAa,IAAIhB,MAAJ,UAAagF,EAAWrD,QAAxB,cAAqCjC,OAGnD,CAACsF,IA3DkC,MA6DV7K,mBAAS,IA7DC,mBA6DjCmL,EA7DiC,KA6DxBC,EA7DwB,OA8DNpL,oBAAS,GA9DH,mBA8DjCqL,EA9DiC,KA8DtBC,EA9DsB,OA+DNtL,oBAAS,GA/DH,mBA+DjCuL,EA/DiC,KA+DtBlB,EA/DsB,KAgElCmB,EAAiBR,GAAcK,GAAaE,EAEhD5K,OAAO0H,OAAO/E,OAAQ,CAAE+G,iBAExB,IAAIoB,EAAYlL,sBAAW,uCACzB,WAAO+E,GAAP,mBAAA9E,EAAA,yDACO8E,EADP,oDAEEgG,GAAa,GAFf,SAIQtF,EAAMmC,GAAS7C,GACfoG,EAASnG,GAAQ,CAAC,OAAQ,QAAQoG,MAAK,SAAAC,GAAG,OAAIrG,EAAKsG,SAASD,MAC5DE,EAAQvG,GAAQ,CAAC,MAAO,QAAQoG,MAAK,SAAAC,GAAG,OAAIrG,EAAKsG,SAASD,OAC1DF,IAAUI,EAPlB,kCAOqCzG,EAAeW,EAAKT,GAPzD,QAOyBS,EAPzB,eAQIoF,EAAWpF,GARf,kDAUIa,GAAa,EAAD,IAVhB,yBAYIyE,GAAa,GAZjB,6EADyB,sDAgBzB,CAAC/F,KGjImB,SAACwG,EAAkBC,EAAgBzE,GACzDwE,EAAUA,GAAW,GAErB,IAAIxD,EAA2CpE,mBAAQ,WACrD,OAAI4H,EAAQ1H,SACHD,IAAEC,SAAS2H,EAAOD,EAAQ1H,SAAU0H,EAAQA,SAC1CA,EAAQE,SACV7H,IAAE6H,SAASD,EAAOD,EAAQE,SAAUF,EAAQA,SAE5CC,IAER,CAACA,EAAOD,EAAQ1H,SAAU0H,EAAQA,QAASA,EAAQE,WAEtD1J,qBAAU,WACJwJ,EAAQG,WACN,WAAY3D,GAAMA,EAAK4D,SAE7B5D,EAAI,WAAJ,cAAQhB,MAEPA,GAEHhF,qBAAU,WAKR,OAJIwJ,EAAQhH,UACN,WAAYwD,GAAMA,EAAK4D,SAC3BH,EAAK,WAAL,cAASzE,KAEJ,WACDwE,EAAQI,QACN,WAAY5D,GAAMA,EAAK4D,YAI9B,IHwGHC,CACE,CACE/H,SAAU,IAEV8H,QAAQ,EACRD,WAAW,GAEbT,EACA,CAAChB,EAAYzG,QAEfV,OAAO+I,eAAiB,WAEtBZ,EAAUhB,EAAYzG,MAAZ,iBAA8B,IAAIsI,KAAlC,SAYZ,IAAIC,EAAsBC,IAAS,CAAEC,SAAU,UAE3CC,EAAqBnM,uBAAY,WACnC,IAAIoM,EAAQ,IAAIC,MAAM,UACtBtJ,OAAOyD,UAAU8F,cAAcF,KAC9B,IASH,OAPApK,qBAAU,WAER,OADAe,OAAOwJ,iBAAiB,SAAUJ,GAC3B,WACLpJ,OAAOyJ,oBAAoB,SAAUL,MAEtC,CAACA,IAGF,yBAAKlK,UAAU,mBACb,kBAAC,IAAD,KACE,4CAAkB+C,EAAI,aAASA,GAAS,IACxC,mFACA,gCAAS4F,IAEX,kBAACjF,EAAD,KACE,kBAACK,EAAD,CAASyG,MAAO,CAAEC,KAAM,EAAGC,UAAW,SACpC,kBAAC,EAAD,CAAYzK,SAAU+I,GACpB,kBAAC/E,EAAD,CAAW5D,GAAG,cACd,yBAAKA,GAAG,iBAGZ,kBAAC,IAAD,eACEsK,SAAUT,GACLH,EACD,CACEa,OAAQ,OACRJ,MAAO,CACLP,SAAU,MACVY,SAAU,MACVC,MAAO,QAGX,CACEF,OAAQ,MACRJ,MAAO,CACLO,UAAW,MACXC,UAAW,MACXC,OAAQ,SAIhB,kBAAClH,EAAD,KACE,kBAAC,aAAD,CACE/D,UAAU,cACVuJ,QAAS,CACP2B,KAAM,sBACNC,MAAO,WACPC,aAAa,GAEf5J,MAAOyG,EAAYxF,WAAWjB,MAC9B6J,eAAgBpD,EAAYxF,WAAWC,gBI9MtC4I,OAff,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWtM,IACjC,kBAAC,IAAD,CAAOoM,KAAK,qBAAqBE,UAAW1D,KAC5C,kBAAC,IAAD,CAAOwD,KAAK,uBAAuBE,UAAW1D,KAC9C,kBAAC,IAAD,CAAOwD,KAAK,KACV,kBAAC,IAAD,CAAUG,GAAG,UCNHjM,QACW,cAA7BqB,OAAO6K,SAASC,UAEe,UAA7B9K,OAAO6K,SAASC,UAEhB9K,OAAO6K,SAASC,SAASC,MACvB,2DCZNnH,IAASC,OAAO,kBAAC,GAAD,MAAeH,SAASsH,eAAe,SDmIjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,MAAK,SAAA2E,GACjCA,EAAaC,kB","file":"static/js/main.079bb087.chunk.js","sourcesContent":["import Axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { useCallback, useState } from 'react';\n\ninterface PathParams {\n  [key: string]: string;\n}\n\ntype Request = (\n  patch?: Partial<\n    AxiosRequestConfig & {\n      pathParams?: PathParams;\n    }\n  >\n) => Promise<void>;\n\nexport interface UseApiObj<T = any, DT = T | null> {\n  request: Request;\n  error: Error | null;\n  response: AxiosResponse<T> | null;\n  getData: () => DT;\n  loading: boolean;\n}\n\n// @todo useMemo config / default\n// @todo loading, error\n\nlet defaultParseData = (response: AxiosResponse | null) => {\n  return response ? response.data : null;\n};\n\nexport let useApi = <T = any, DT = T>(\n  method: AxiosRequestConfig['method'],\n  urlPattern: string,\n  parseData: (response: AxiosResponse<T> | null) => DT = defaultParseData\n): UseApiObj<T, DT> => {\n  let [response, setResponse] = useState<AxiosResponse<T> | null>(null);\n  let [loading, setLoading] = useState(false);\n  let [error, setError] = useState(null);\n\n  let request: Request = useCallback(\n    async (patch = {}) => {\n      let pathParams: PathParams = patch.pathParams || Object.create(null);\n\n      let trueUrl = urlPattern.replace(/\\/:([^/?#&\\d][^/?#&]*)/g, ($0, $1) => {\n        return `/${pathParams[$1]}`;\n      });\n\n      try {\n        setLoading(true);\n        let response = await Axios({\n          method,\n          url: trueUrl,\n          ...patch,\n        });\n        setResponse(response);\n        setError(null);\n      } catch (err) {\n        setResponse(null);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [method, setResponse, urlPattern]\n  );\n\n  let getData = useCallback(() => {\n    return parseData(response);\n  }, [parseData, response]);\n\n  return { request, error, response, getData, loading };\n};\n","export let handleImageError = (\n  e: React.SyntheticEvent<HTMLImageElement, Event>\n) => {\n  let el = e.currentTarget;\n  let parent = el.parentNode;\n  if (parent) parent.removeChild(el);\n};\n","import { Card, Col, Row, Spin } from 'antd';\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useApi } from '../hooks/useApi';\nimport './page.css';\nimport { handleImageError } from './util';\nimport Helmet from 'react-helmet';\n\nexport let Gallery: React.FC = () => {\n  let history = useHistory();\n\n  let { request: reqIndex, loading: loadingIndex, getData: getIndex } = useApi<\n    string,\n    string[]\n  >('GET', 'code/index.yml', resp => {\n    if (!resp) return [];\n    let txt = resp.data;\n    let list = txt\n      .split(/\\n/)\n      .filter(Boolean)\n      .map(v => v.replace(/^-\\s*/, ''));\n    return list;\n  });\n\n  useEffect(() => {\n    reqIndex();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"page-gallery\">\n      <Helmet>\n        <title>Gallery</title>\n      </Helmet>\n      <Spin spinning={loadingIndex}>\n        <div className=\"main-container\">\n          <Row\n            gutter={[\n              { xs: 12, sm: 16 },\n              { xs: 12, sm: 16 },\n            ]}\n          >\n            {getIndex().map(id => {\n              return (\n                <Col key={id} xs={12} sm={12}>\n                  <Card\n                    hoverable\n                    cover={\n                      <img\n                        alt=\"\"\n                        src={`code/${id}.png`}\n                        onError={handleImageError}\n                      />\n                    }\n                    onClick={e => {\n                      if (e.metaKey) {\n                        window.open(`/#/playground/${id}`);\n                      } else {\n                        history.push(`/playground/${id}`);\n                      }\n                    }}\n                  >\n                    <Card.Meta\n                      title={id}\n                      // description=\"www.instagram.com\"\n                    />\n                  </Card>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Spin>\n    </div>\n  );\n};\n","import { Spin } from 'antd';\nimport { SpinProps } from 'antd/lib/spin';\nimport _ from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\n\ntype UseGentle = <T = any>(v: T) => T;\n\nlet useGentle: UseGentle = _value => {\n  let [value, setValue] = useState(_value);\n\n  let debouncedSetValue = useMemo(() => {\n    return _.debounce(setValue, 1000, {\n      leading: true,\n      trailing: true,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (_value) {\n      setValue(_value);\n    } else {\n      debouncedSetValue(_value);\n    }\n  }, [_value, debouncedSetValue]);\n\n  return value;\n};\n\nexport let GentleSpin: React.FC<SpinProps> = props => {\n  let { spinning: _spinning, ...rest } = props;\n\n  let spinning = useGentle(_spinning); // todo\n\n  return <Spin {...{ ...rest, spinning }} />;\n};\n","import { useCallback, useMemo, useState } from 'react';\n\ntype ParseValue<T> = (...args: any[]) => T;\n\n// @todo uncontrolled / defaultValue\n\nexport let useFormBinding = <T>(_initial: T, _parseValue?: ParseValue<T>) => {\n  let defaultParseValue: ParseValue<T> = useCallback(e => {\n    let r = e;\n    if (e && e.target && 'value' in e.target) {\n      r = e.target.value;\n    }\n    return r;\n  }, []);\n\n  let [initial, parseValue] = useMemo(() => {\n    return [_initial, _parseValue || defaultParseValue];\n  }, [_initial, _parseValue, defaultParseValue]);\n\n  let [value, setValue] = useState<T>(initial);\n\n  let handleChange = useCallback(\n    (e, ...rest) => {\n      let r = parseValue(e, ...rest);\n      setValue(r);\n    },\n    [parseValue]\n  );\n\n  let controlled = {\n    value,\n    onChange: handleChange,\n  };\n\n  return { value, controlled };\n};\n","let worker = new Worker('./babel-worker.js');\n\nexport let babelTransform = async (\n  code: string,\n  file: string\n): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    worker.onerror = e => {\n      console.error(['worker onerror', e]);\n      reject(new Error(`worker onerror - ${code.slice(0, 100)}`));\n    };\n\n    worker.onmessage = e => {\n      let res = e.data;\n      if (res.error) {\n        reject(res.error as Error);\n      } else {\n        resolve(res.data as string);\n      }\n    };\n    worker.postMessage({ code, file });\n  });\n};\n","import { Col, Row } from 'antd';\nimport styled from 'styled-components';\nimport media from 'styled-media-query';\n\n/**\n * https://github.com/morajabi/styled-media-query\n * export const defaultBreakpoints = {\n    huge: '1440px',\n    large: '1170px',\n    medium: '768px',\n    small: '450px',\n  };\n */\n\nexport let MainRow = styled(Row)`\n  height: 100%;\n  display: flex;\n\n  ${media.lessThan('medium')`\n    flex-direction: column;\n  `}\n`;\n\nexport let MainCol = styled(Col)`\n  height: 100%;\n`;\n\nexport let MountNode = styled.div`\n  height: 100%;\n  min-height: 100px;\n  overflow-y: auto;\n  word-break: break-word;\n`;\n\nexport let ErrorInfo = styled.pre`\n  font-size: 12px;\n  color: red;\n  white-space: pre-wrap;\n  padding: 10px;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ErrorInfo } from './styled';\nimport Axios from 'axios';\n\nexport let displayError = (err: Error) => {\n  let mountNode = document.querySelector('#mountNode');\n  ReactDOM.render(<ErrorInfo>{err.stack}</ErrorInfo>, mountNode);\n};\n\nexport let loadJsForceUmd = async ({\n  url,\n  name,\n  deps = {},\n}: {\n  url: string;\n  name: string;\n  deps: { [key: string]: string };\n}) => {\n  let code = '';\n  try {\n    let { data } = await Axios(url);\n    code = data;\n  } catch (err) {\n    throw new Error(`loadJsForceUmd - ${err.message} - ${url}`);\n  }\n  code = `\n    (() => {\n      let module = { exports: {} }\n      let require = k => {\n        ${Object.keys(deps)\n          .map(k => `if (k === ${JSON.stringify(k)}) return ${deps[k]}`)\n          .join('\\n')}\n        throw new Error(\\`module '\\${k}' not found\\`)\n      }\n      ;;${code};;\n      window[${JSON.stringify(name)}] = module.exports\n    })()\n  `;\n  appendJs(code);\n};\n\nexport let loadJs = (url: string | string[]): Promise<void> => {\n  if (Array.isArray(url)) {\n    return Promise.all(url.map(loadJs)).then(() => undefined);\n  }\n  return new Promise((resolve, reject) => {\n    let el = document.createElement('script');\n    el.src = url;\n    el.onload = () => {\n      resolve();\n    };\n    el.onerror = e => {\n      reject(new Error(`loadJs onerror - ${url}`));\n    };\n    window.assetsNode.appendChild(el);\n  });\n};\n\nexport let loadCss = (url: string | string[]): Promise<void> => {\n  if (Array.isArray(url)) {\n    return Promise.all(url.map(loadCss)).then(() => undefined);\n  }\n  return new Promise((resolve, reject) => {\n    let el = document.createElement('link');\n    el.rel = 'stylesheet';\n    el.href = url;\n    el.onload = () => {\n      resolve();\n    };\n    el.onerror = e => {\n      reject(new Error(`loadCss onerror - ${url}`));\n    };\n    window.assetsNode.appendChild(el);\n  });\n};\n\nexport let appendJs = (code: string) => {\n  let el = document.createElement('script');\n  el.innerHTML = code;\n  window.assetsNode.appendChild(el);\n};\n\nexport let appendCss = (code: string) => {\n  let el = document.createElement('style');\n  el.innerHTML = code;\n  window.assetsNode.appendChild(el);\n};\n\nexport let wrapCode = (code: string) => {\n  return `\n(async () => {\n  setRendering(true)\n\n  let a0 = assetsNode\n  a0.id = 'assetsNodeOutdated'\n  let a1 = document.createElement('div')\n  a1.id = 'assetsNode'\n  a0.parentNode.appendChild(a1)\n\n  // mountNode.innerHTML = '' // can cause error in react\n  ReactDOM.unmountComponentAtNode(mountNode)\n\n  try {\n    let { useRef, useMemo, useState, useEffect, useLayoutEffect, useReducer, useContext, useCallback, useImperativeHandle } = React\n\n    ;;${code};;\n\n    if (typeof App !== 'undefined') {\n      let isVueLike = _.isPlainObject(App)\n      if (isVueLike) {\n        if (!mountNode.children[0]) {\n          let innerNode = document.createElement('div')\n          mountNode.appendChild(innerNode)\n        }\n        let curr = mountNode.children[0]\n      new Vue(App).$mount(curr)\n      } else {\n        ReactDOM.render(React.createElement(App), mountNode)\n      }\n    }\n    a0.parentNode.removeChild(a0)\n  } catch (err) {\n    console.error(['displayError', err])\n    displayError(err)\n  } finally {\n    setRendering(false)\n  }\n})()\n  `.trim();\n};\n","import * as Antd from 'antd';\nimport 'codemirror/lib/codemirror.css';\n// import 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/jsx/jsx';\nimport 'codemirror/theme/material.css';\nimport _ from 'lodash';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport ReactDOM from 'react-dom';\nimport { DragSizing } from 'react-drag-sizing';\nimport Helmet from 'react-helmet';\nimport { useHistory, useParams } from 'react-router';\nimport styled from 'styled-components';\nimport useMedia from 'use-media';\nimport immer from 'immer';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport { GentleSpin } from '../components/GentleSpin';\nimport { useApi } from '../hooks/useApi';\nimport { useFormBinding } from '../hooks/useFormBinding';\nimport { useInterval } from '../hooks/useInterval';\nimport { useModel } from '../hooks/useModel';\nimport { useTrigger } from '../hooks/useTrigger';\nimport { babelTransform } from './babelMaster';\nimport './page.css';\nimport { MainCol, MainRow, MountNode } from './styled';\nimport {\n  displayError,\n  loadJsForceUmd,\n  loadJs,\n  loadCss,\n  appendJs,\n  appendCss,\n  wrapCode,\n} from './util';\n\nObject.assign(window, {\n  useFormBinding,\n  useInterval,\n  useModel,\n  moment,\n  styled,\n  immer,\n  _,\n  axios: Axios,\n  Antd,\n  React,\n  ReactDOM,\n  displayError,\n  loadJsForceUmd,\n  loadJs,\n  loadCss,\n  appendJs,\n  appendCss,\n  setRendering: _.noop, // noop placeholder\n});\n\n// let storeKeyCode = 'playground__initialCode';\n\nexport let Playground: React.FC = () => {\n  let history = useHistory();\n  let { file } = useParams() as { file: string };\n  // let initialCode = useMemo(() => {\n  //   return localStorage.getItem(storeKeyCode) || _initialCode;\n  // }, []);\n  let initialCode = '';\n  let codeBinding = useFormBinding(initialCode, (editor, data, value) => value);\n\n  let {\n    request: reqIndex,\n    response: respIndex,\n    loading: loadingIndex,\n  } = useApi<string>('GET', 'code/index.yml');\n  let {\n    request: reqCode,\n    error: errReqCode,\n    response: respCode,\n    loading: loadingCode,\n  } = useApi<string>('GET', 'code/:file');\n  let preloading = loadingIndex || loadingCode;\n\n  useEffect(() => {\n    if (file) {\n      reqCode({ pathParams: { file } });\n    } else {\n      reqIndex();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  useEffect(() => {\n    if (respIndex == null) return;\n    let txt = respIndex.data;\n    let list = txt\n      .split(/\\n/)\n      .map(s => s.replace(/#.*/, '').trim())\n      .filter(Boolean)\n      .map(v => v.replace(/^-\\s*/, ''));\n    let defaults = list[0];\n    // reqCode({ pathParams: { file: file || defaults } });\n    history.push(`/playground/${file || defaults}`);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file, respIndex]);\n\n  useEffect(() => {\n    if (respCode == null) return;\n    codeBinding.controlled.onChange(null, null, respCode.data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [respCode]);\n\n  useEffect(() => {\n    // if (errReqCode && String(errReqCode).includes('status code 404')) {\n    //   history.push('/'); // force redirect\n    // }\n    if (errReqCode) {\n      displayError(new Error(`${errReqCode.message} - ${file}`));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [errReqCode]);\n\n  let [preview, setPreview] = useState('');\n  let [compiling, setCompiling] = useState(false);\n  let [rendering, setRendering] = useState(false);\n  let previewLoading = preloading || compiling || rendering;\n\n  Object.assign(window, { setRendering }); // without side-effect\n\n  let doPreview = useCallback(\n    async (code: string) => {\n      if (!code) return;\n      setCompiling(true);\n      try {\n        let res = wrapCode(code);\n        let hasJsx = file && ['.jsx', '.tsx'].some(ext => file.endsWith(ext));\n        let hasTs = file && ['.ts', '.tsx'].some(ext => file.endsWith(ext));\n        if (hasJsx || hasTs) res = await babelTransform(res, file);\n        setPreview(res);\n      } catch (err) {\n        displayError(err);\n      } finally {\n        setCompiling(false);\n      }\n    },\n    [file]\n  );\n\n  // let persistEditor = useCallback((code: string) => {\n  //   localStorage.setItem(storeKeyCode, code);\n  // }, []);\n\n  useTrigger(\n    {\n      debounce: 1000,\n      // initial: true,\n      cancel: true,\n      singleton: true,\n    },\n    doPreview,\n    [codeBinding.value]\n  );\n  window.triggerPreview = () => {\n    // doPreview(codeBinding.value);\n    doPreview(codeBinding.value + `\\n\\n/* ${new Date()} */`);\n  };\n\n  // useTrigger(\n  //   {\n  //     throttle: 1000,\n  //   },\n  //   persistEditor,\n  //   [codeBinding.value]\n  // );\n\n  // keeping sync'd with styled.ts (medium=768px)\n  let isGreaterThanMedium = useMedia({ minWidth: '768px' });\n\n  let handleSizingUpdate = useCallback(() => {\n    let event = new Event('resize');\n    window.mountNode.dispatchEvent(event);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleSizingUpdate);\n    return () => {\n      window.removeEventListener('resize', handleSizingUpdate);\n    };\n  }, [handleSizingUpdate]);\n\n  return (\n    <div className=\"page-playground\">\n      <Helmet>\n        <title>Playground{file ? ` - ${file}` : ''}</title>\n        <style>{`html { overflow: hidden } #root { height: 100% }`}</style>\n        <script>{preview}</script>\n      </Helmet>\n      <MainRow>\n        <MainCol style={{ flex: 1, overflowX: 'auto' }}>\n          <GentleSpin spinning={previewLoading}>\n            <MountNode id=\"mountNode\" />\n            <div id=\"assetsNode\" />\n          </GentleSpin>\n        </MainCol>\n        <DragSizing\n          onUpdate={handleSizingUpdate}\n          {...(isGreaterThanMedium\n            ? {\n                border: 'left',\n                style: {\n                  minWidth: '20%',\n                  maxWidth: '80%',\n                  width: '50%',\n                },\n              }\n            : {\n                border: 'top',\n                style: {\n                  minHeight: '20%',\n                  maxHeight: '80%',\n                  height: '50%',\n                },\n              })}\n        >\n          <MainCol>\n            <CodeMirror\n              className=\"main-editor\"\n              options={{\n                mode: 'text/typescript-jsx',\n                theme: 'material',\n                lineNumbers: true,\n              }}\n              value={codeBinding.controlled.value}\n              onBeforeChange={codeBinding.controlled.onChange}\n            />\n          </MainCol>\n        </DragSizing>\n      </MainRow>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\ntype AnyFunc = (...args: any) => any;\n\nexport let useInterval = (func: AnyFunc, interval: number) => {\n  useEffect(() => {\n    let id = setInterval(() => {\n      func();\n    }, interval);\n    return () => {\n      if (id) clearInterval(id);\n    };\n  }, [func, interval]);\n};\n","import _ from 'lodash';\nimport { Reducer, useMemo, useReducer } from 'react';\n\ninterface ActionArgMap<A> {\n  [type: string]: (...args: any[]) => Omit<A, 'type'> | null;\n}\ninterface ActionMap<A> {\n  [type: string]: (...args: any[]) => A;\n}\n\nexport let useModel = <S, A extends { type: string }>(\n  reducer: Reducer<S, A>,\n  initialState: S,\n  _actions: ActionArgMap<A>\n) => {\n  let [state, dispatch] = useReducer<Reducer<S, A>>(reducer, initialState);\n\n  let actions = useMemo<ActionMap<A>>(() => {\n    return _.reduce(\n      _actions,\n      (acc, func, k) => {\n        acc[k] = (...args: any[]) => {\n          let patch = func(...args);\n          let action = { type: k, ...patch } as A;\n          return dispatch(action);\n        };\n        return acc;\n      },\n      Object.create(null)\n    );\n  }, [_actions, dispatch]);\n\n  return [state, actions];\n};\n","import _ from 'lodash';\nimport { useEffect, useMemo } from 'react';\n\ntype AnyFunc = (...args: any) => any;\n\ninterface Options {\n  debounce?: number;\n  throttle?: number;\n  options?: _.DebounceSettings | _.ThrottleSettings;\n  initial?: boolean;\n  cancel?: boolean;\n  singleton?: boolean;\n}\n\nexport let useTrigger = (options: Options, _func: AnyFunc, deps: any[]) => {\n  options = options || {};\n\n  let func: AnyFunc | (AnyFunc & _.Cancelable) = useMemo(() => {\n    if (options.debounce) {\n      return _.debounce(_func, options.debounce, options.options);\n    } else if (options.throttle) {\n      return _.throttle(_func, options.throttle, options.options);\n    } else {\n      return _func;\n    }\n  }, [_func, options.debounce, options.options, options.throttle]);\n\n  useEffect(() => {\n    if (options.singleton) {\n      if ('cancel' in func) func.cancel();\n    }\n    func(...deps);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  useEffect(() => {\n    if (options.initial) {\n      if ('cancel' in func) func.cancel();\n      _func(...deps);\n    }\n    return () => {\n      if (options.cancel) {\n        if ('cancel' in func) func.cancel();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { Gallery } from './gallery';\nimport { Playground } from './playground';\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Gallery} />\n        <Route path=\"/playground/:file?\" component={Playground} />\n        <Route path=\"/playground/:file/**\" component={Playground} />\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}